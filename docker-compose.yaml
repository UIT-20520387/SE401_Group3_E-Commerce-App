services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3003:5000"
    volumes:
      - ./server/node_modules:/home/node/app/node_modules
    networks:
      - general_network

  mongo:
    image: mongo
    restart: always
    container_name: ec_mongo
    networks:
      - general_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    expose:
      - "27017"
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: ec_mongo_express
    restart: always
    ports:
      - 8081:8081
    networks:
      - general_network
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: express
      ME_CONFIG_MONGODB_ADMINPASSWORD: express
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:mongodb@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  kong:
    image: kong:latest
    container_name: ec_kong
    networks:
      general_network:
    restart: always
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PG_HOST: kong_db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_ADMIN_LISTEN_SSL: "0.0.0.0:8444"
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8002:8002"
      - "8444:8444"
    #dns:
    #  - 192.168.1.10:8600
    volumes:
      - ./kong_config.yml:/usr/local/kong/declarative/kong.yml
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 5s
      timeout: 2s
      retries: 15

networks:
  general_network:
    driver: bridge

volumes:
  kong_data:
  mongodb_data:
    driver: local
